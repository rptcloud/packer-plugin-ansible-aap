// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package config

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	TowerHost          *string                `mapstructure:"tower_host" cty:"tower_host" hcl:"tower_host"`
	Username           *string                `mapstructure:"username" cty:"username" hcl:"username"`
	Password           *string                `mapstructure:"password" cty:"password" hcl:"password"`
	AccessToken        *string                `mapstructure:"access_token" cty:"access_token" hcl:"access_token"`
	JobTemplateID      *int                   `mapstructure:"job_template_id" cty:"job_template_id" hcl:"job_template_id"`
	InventoryID        *int                   `mapstructure:"inventory_id" cty:"inventory_id" hcl:"inventory_id"`
	OrganizationID     *int                   `mapstructure:"organization_id" cty:"organization_id" hcl:"organization_id"`
	DynamicInventory   *bool                  `mapstructure:"dynamic_inventory" cty:"dynamic_inventory" hcl:"dynamic_inventory"`
	KeepTempInventory  *bool                  `mapstructure:"keep_temp_inventory,default=false" cty:"keep_temp_inventory" hcl:"keep_temp_inventory"`
	KeepTempCredential *bool                  `mapstructure:"keep_temp_credential,default=false" cty:"keep_temp_credential" hcl:"keep_temp_credential"`
	CreateCredential   *bool                  `mapstructure:"create_credential,default=true" cty:"create_credential" hcl:"create_credential"`
	ExtraVars          map[string]interface{} `mapstructure:"extra_vars" cty:"extra_vars" hcl:"extra_vars"`
	Timeout            *string                `mapstructure:"timeout" cty:"timeout" hcl:"timeout"`
	PollInterval       *string                `mapstructure:"poll_interval" cty:"poll_interval" hcl:"poll_interval"`
	WorkflowTemplateID *int                   `mapstructure:"workflow_template_id" cty:"workflow_template_id" hcl:"workflow_template_id"`
	InsecureSkipVerify *bool                  `mapstructure:"insecure_skip_verify,default=false" cty:"insecure_skip_verify" hcl:"insecure_skip_verify"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"tower_host":           &hcldec.AttrSpec{Name: "tower_host", Type: cty.String, Required: false},
		"username":             &hcldec.AttrSpec{Name: "username", Type: cty.String, Required: false},
		"password":             &hcldec.AttrSpec{Name: "password", Type: cty.String, Required: false},
		"access_token":         &hcldec.AttrSpec{Name: "access_token", Type: cty.String, Required: false},
		"job_template_id":      &hcldec.AttrSpec{Name: "job_template_id", Type: cty.Number, Required: false},
		"inventory_id":         &hcldec.AttrSpec{Name: "inventory_id", Type: cty.Number, Required: false},
		"organization_id":      &hcldec.AttrSpec{Name: "organization_id", Type: cty.Number, Required: false},
		"dynamic_inventory":    &hcldec.AttrSpec{Name: "dynamic_inventory", Type: cty.Bool, Required: false},
		"keep_temp_inventory":  &hcldec.AttrSpec{Name: "keep_temp_inventory", Type: cty.Bool, Required: false},
		"keep_temp_credential": &hcldec.AttrSpec{Name: "keep_temp_credential", Type: cty.Bool, Required: false},
		"create_credential":    &hcldec.AttrSpec{Name: "create_credential", Type: cty.Bool, Required: false},
		"extra_vars":           &hcldec.AttrSpec{Name: "extra_vars", Type: cty.Map(cty.String), Required: false},
		"timeout":              &hcldec.AttrSpec{Name: "timeout", Type: cty.String, Required: false},
		"poll_interval":        &hcldec.AttrSpec{Name: "poll_interval", Type: cty.String, Required: false},
		"workflow_template_id": &hcldec.AttrSpec{Name: "workflow_template_id", Type: cty.Number, Required: false},
		"insecure_skip_verify": &hcldec.AttrSpec{Name: "insecure_skip_verify", Type: cty.Bool, Required: false},
	}
	return s
}
